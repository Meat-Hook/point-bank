// Code generated by MockGen. DO NOT EDIT.
// Source: grpc.go

// Package rpc_test is a generated GoMock package.
package rpc_test

import (
	context "context"
	reflect "reflect"

	app "github.com/Meat-Hook/point-bank/internal/modules/session/internal/app"
	gomock "github.com/golang/mock/gomock"
)

// Mocksessions is a mock of sessions interface
type Mocksessions struct {
	ctrl     *gomock.Controller
	recorder *MocksessionsMockRecorder
}

// MocksessionsMockRecorder is the mock recorder for Mocksessions
type MocksessionsMockRecorder struct {
	mock *Mocksessions
}

// NewMocksessions creates a new mock instance
func NewMocksessions(ctrl *gomock.Controller) *Mocksessions {
	mock := &Mocksessions{ctrl: ctrl}
	mock.recorder = &MocksessionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mocksessions) EXPECT() *MocksessionsMockRecorder {
	return m.recorder
}

// Session mocks base method
func (m *Mocksessions) Session(ctx context.Context, token string) (*app.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Session", ctx, token)
	ret0, _ := ret[0].(*app.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Session indicates an expected call of Session
func (mr *MocksessionsMockRecorder) Session(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Session", reflect.TypeOf((*Mocksessions)(nil).Session), ctx, token)
}
